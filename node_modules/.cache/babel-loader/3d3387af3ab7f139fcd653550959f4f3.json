{"ast":null,"code":"import rerenderEntireTree from '../render.js';\nlet state = {\n  profile: {\n    messages: [{\n      id: 1,\n      message: 'Hi'\n    }, {\n      id: 2,\n      message: 'Hi'\n    }, {\n      id: 3,\n      message: 'you are good'\n    }, {\n      id: 4,\n      message: 'yo'\n    }, {\n      id: 5,\n      message: 'you'\n    }]\n  },\n  messagesPege: {\n    dialogsData: [{\n      id: 1,\n      name: 'Aleksey'\n    }, {\n      id: 2,\n      name: 'Dmitiy'\n    }, {\n      id: 3,\n      name: 'Grigorii'\n    }, {\n      id: 4,\n      name: 'Eugeny'\n    }, {\n      id: 5,\n      name: 'Artem'\n    }],\n    postData: [{\n      id: 1,\n      post: 'Hi, how are you?',\n      likeCount: 5\n    }, {\n      id: 2,\n      post: \"It's my first post\",\n      likeCount: 8\n    }, {\n      id: 3,\n      post: 'you are good',\n      likeCount: 8\n    }, {\n      id: 4,\n      post: 'yo',\n      likeCount: 8\n    }, {\n      id: 5,\n      post: 'you',\n      likeCount: 8\n    }] // newPostText: 'it-proframing'\n\n  }\n};\nexport let addPost = () => {\n  let newPost = {\n    id: 5,\n    post: state.messagesPege.newPostText,\n    likeCount: 0\n  };\n  state.messagesPege.postData.push(newPost);\n  state.messagesPege.newPostText = '';\n  rerenderEntireTree(state);\n};\nexport let updateNewPostText = NewTex => {\n  state.messagesPege.newPostText = NewTex;\n  rerenderEntireTree(state);\n};\nexport default state;","map":{"version":3,"sources":["/Users/bukurosaleksey/Desktop/react_lerning/my-app/src/redux/state.js"],"names":["rerenderEntireTree","state","profile","messages","id","message","messagesPege","dialogsData","name","postData","post","likeCount","addPost","newPost","newPostText","push","updateNewPostText","NewTex"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,cAA/B;AACA,IAAIC,KAAK,GAAG;AACRC,EAAAA,OAAO,EAAE;AAELC,IAAAA,QAAQ,EAAE,CACN;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KADM,EAEN;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAFM,EAGN;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAHM,EAIN;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAJM,EAKN;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KALM;AAFL,GADD;AAaRC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,CACT;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASI,MAAAA,IAAI,EAAE;AAAf,KADS,EAET;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASI,MAAAA,IAAI,EAAE;AAAf,KAFS,EAGT;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASI,MAAAA,IAAI,EAAE;AAAf,KAHS,EAIT;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASI,MAAAA,IAAI,EAAE;AAAf,KAJS,EAKT;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASI,MAAAA,IAAI,EAAE;AAAf,KALS,CADH;AAQVC,IAAAA,QAAQ,EAAE,CACN;AAAEL,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE,kBAAf;AAAmCC,MAAAA,SAAS,EAAE;AAA9C,KADM,EAEN;AAAEP,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE,oBAAf;AAAqCC,MAAAA,SAAS,EAAE;AAAhD,KAFM,EAGN;AAAEP,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE,cAAf;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAHM,EAIN;AAAEP,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE,IAAf;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAJM,EAKN;AAAEP,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE,KAAf;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KALM,CARA,CAeV;;AAfU;AAbN,CAAZ;AA+BA,OAAO,IAAIC,OAAO,GAAG,MAAM;AAGvB,MAAIC,OAAO,GAAG;AACVT,IAAAA,EAAE,EAAE,CADM;AAEVM,IAAAA,IAAI,EAAET,KAAK,CAACK,YAAN,CAAmBQ,WAFf;AAGVH,IAAAA,SAAS,EAAE;AAHD,GAAd;AAMAV,EAAAA,KAAK,CAACK,YAAN,CAAmBG,QAAnB,CAA4BM,IAA5B,CAAiCF,OAAjC;AACAZ,EAAAA,KAAK,CAACK,YAAN,CAAmBQ,WAAnB,GAAiC,EAAjC;AACAd,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACH,CAZM;AAcP,OAAO,IAAIe,iBAAiB,GAAIC,MAAD,IAAY;AACtChB,EAAAA,KAAK,CAACK,YAAN,CAAmBQ,WAAnB,GAAiCG,MAAjC;AACDjB,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACH,CAHM;AAKP,eAAeA,KAAf","sourcesContent":["import rerenderEntireTree from '../render.js'\nlet state = {\n    profile: {\n\n        messages: [\n            { id: 1, message: 'Hi' },\n            { id: 2, message: 'Hi' },\n            { id: 3, message: 'you are good' },\n            { id: 4, message: 'yo' },\n            { id: 5, message: 'you' }\n        ],\n        \n    },\n\n    messagesPege: {\n        dialogsData: [\n            { id: 1, name: 'Aleksey' },\n            { id: 2, name: 'Dmitiy' },\n            { id: 3, name: 'Grigorii' },\n            { id: 4, name: 'Eugeny' },\n            { id: 5, name: 'Artem' }\n        ],\n        postData: [\n            { id: 1, post: 'Hi, how are you?', likeCount: 5 },\n            { id: 2, post: \"It's my first post\", likeCount: 8 },\n            { id: 3, post: 'you are good', likeCount: 8 },\n            { id: 4, post: 'yo', likeCount: 8 },\n            { id: 5, post: 'you', likeCount: 8 }\n        ],\n        // newPostText: 'it-proframing'\n    }\n}\nexport let addPost = () => {\n\n   \n    let newPost = {\n        id: 5,\n        post: state.messagesPege.newPostText,\n        likeCount: 0\n    };\n\n    state.messagesPege.postData.push(newPost);\n    state.messagesPege.newPostText = '';\n    rerenderEntireTree(state)\n}\n\nexport let updateNewPostText = (NewTex) => {\n     state.messagesPege.newPostText = NewTex;\n    rerenderEntireTree(state)\n}\n\nexport default state"]},"metadata":{},"sourceType":"module"}