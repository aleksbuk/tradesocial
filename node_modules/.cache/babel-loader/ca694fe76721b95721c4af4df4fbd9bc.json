{"ast":null,"code":"// import rerenderEntireTree from '../render.js'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\nlet store = {\n  _state: {\n    messagesPege: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Hi'\n      }, {\n        id: 3,\n        message: 'you are good'\n      }, {\n        id: 4,\n        message: 'yo'\n      }, {\n        id: 5,\n        message: 'you'\n      }],\n      newMessageText: ''\n    },\n    profile: {\n      dialogsData: [{\n        id: 1,\n        name: 'Aleksey'\n      }, {\n        id: 2,\n        name: 'Dmitiy'\n      }, {\n        id: 3,\n        name: 'Grigorii'\n      }, {\n        id: 4,\n        name: 'Eugeny'\n      }, {\n        id: 5,\n        name: 'Artem'\n      }],\n      postData: [{\n        id: 1,\n        post: 'Hi, how are you?',\n        likeCount: 5\n      }, {\n        id: 2,\n        post: \"It's my first post\",\n        likeCount: 8\n      }, {\n        id: 3,\n        post: 'you are good',\n        likeCount: 8\n      }, {\n        id: 4,\n        post: 'yo',\n        likeCount: 8\n      }, {\n        id: 5,\n        post: 'you',\n        likeCount: 8\n      }],\n      newPostText: 'it-proframing'\n    }\n  },\n\n  _callSubscriber() {\n    console.log('State chenged');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  //addPost () {\n  // // debugger;\n  //         let newPost = {\n  //             id: 5,\n  //             post: this._state.messagesPege.newPostText,\n  //             likeCount: 0\n  //         };\n  //         this._state.messagesPege.postData.push(newPost);\n  //         this._state.messagesPege.newPostText = '';\n  //         this._callSubscriber( this._state)\n  //     },\n  //     updateNewPostText (newTex) {\n  //         this._state.messagesPege.newPostText = newTex;\n  //         this._callSubscriber( this._state)\n  //     },\n  //     addMessage() {\n  //         let newMessage = {\n  //             id: 5,\n  //             message:  this._state.profile.newMessageText\n  //         }\n  //         this._state.profile.messages.push(newMessage);\n  //         this._callSubscriber( this._state)\n  //     },\n  //      updateNewMessage(newMessages) {\n  //         this._state.profile.newMessageText = newMessages;\n  //         this._callSubscriber( this._state)\n  //     },\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 6,\n        post: this._state.profile.newPostText,\n        likeCount: 0\n      };\n\n      this._state.profile.postData.push(newPost);\n\n      this._state.profile.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profile.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'ADD-MESSAGE') {\n      let newMessage = {\n        id: 6,\n        message: this._state.messagesPege.newMessageText\n      };\n\n      this._state.messagesPege.messages.push(newMessage);\n\n      this._state.messagesPege.newMessageText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.tipe === 'UPDATE-NEW-MESSAGE') {\n      this._state.messagesPege.newMessageText = action.newMessageText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: 'ADD-POST'\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: 'UPDATE-NEW-POST-TEXT',\n  newText: text\n});\nexport const addMessageActionCreator = () => ({\n  type: 'ADD-MESSAGE'\n});\nexport const updateNewMessageActionCreator = mess => ({\n  type: 'UPDATE-NEW-MESSAGE',\n  newMessageText: mess\n});\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/bukurosaleksey/Desktop/react_lerning/my-app/src/redux/state.js"],"names":["UPDATE_NEW_POST_TEXT","ADD_MESSAGE","UPDATE_NEW_MESSAGE","store","_state","messagesPege","messages","id","message","newMessageText","profile","dialogsData","name","postData","post","likeCount","newPostText","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","tipe","addPostActionCreator","updateNewPostTextActionCreator","text","addMessageActionCreator","updateNewMessageActionCreator","mess","window"],"mappings":"AAAA;AACA,MAAMA,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,YAAY,EAAE;AAEVC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAJM,EAKN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OALM,CAFA;AASVC,MAAAA,cAAc,EAAE;AATN,KADV;AAaJC,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE,CACT;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OADS,EAET;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAFS,EAGT;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAHS,EAIT;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OAJS,EAKT;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASK,QAAAA,IAAI,EAAE;AAAf,OALS,CADR;AAQLC,MAAAA,QAAQ,EAAE,CACN;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE,kBAAf;AAAmCC,QAAAA,SAAS,EAAE;AAA9C,OADM,EAEN;AAAER,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE,oBAAf;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OAFM,EAGN;AAAER,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,SAAS,EAAE;AAA1C,OAHM,EAIN;AAAER,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE,IAAf;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAJM,EAKN;AAAER,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE,KAAf;AAAsBC,QAAAA,SAAS,EAAE;AAAjC,OALM,CARL;AAeLC,MAAAA,WAAW,EAAE;AAfR;AAbL,GADA;;AAgCRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAlCO;;AAoCRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKhB,MAAZ;AACH,GAtCO;;AAuCRiB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKL,eAAL,GAAuBK,QAAvB;AAEH,GA1CO;;AA4CR;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVnB,QAAAA,EAAE,EAAE,CADM;AAEVO,QAAAA,IAAI,EAAE,KAAKV,MAAL,CAAYM,OAAZ,CAAoBM,WAFhB;AAGVD,QAAAA,SAAS,EAAE;AAHD,OAAd;;AAMA,WAAKX,MAAL,CAAYM,OAAZ,CAAoBG,QAApB,CAA6Bc,IAA7B,CAAkCD,OAAlC;;AACA,WAAKtB,MAAL,CAAYM,OAAZ,CAAoBM,WAApB,GAAkC,EAAlC;;AACA,WAAKC,eAAL,CAAqB,KAAKb,MAA1B;AACH,KAVD,MAUO,IAAIoB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC/C,WAAKrB,MAAL,CAAYM,OAAZ,CAAoBM,WAApB,GAAkCQ,MAAM,CAACI,OAAzC;;AACA,WAAKX,eAAL,CAAqB,KAAKb,MAA1B;AACH,KAHM,MAGA,IAAIoB,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACtC,UAAII,UAAU,GAAG;AACbtB,QAAAA,EAAE,EAAE,CADS;AAEbC,QAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYC,YAAZ,CAAyBI;AAFrB,OAAjB;;AAKA,WAAKL,MAAL,CAAYC,YAAZ,CAAyBC,QAAzB,CAAkCqB,IAAlC,CAAuCE,UAAvC;;AACA,WAAKzB,MAAL,CAAYC,YAAZ,CAAyBI,cAAzB,GAA0C,EAA1C;;AACA,WAAKQ,eAAL,CAAqB,KAAKb,MAA1B;AACH,KATM,MASA,IAAIoB,MAAM,CAACM,IAAP,KAAgB,oBAApB,EAA0C;AAC7C,WAAK1B,MAAL,CAAYC,YAAZ,CAAyBI,cAAzB,GAA0Ce,MAAM,CAACf,cAAjD;;AACA,WAAKQ,eAAL,CAAqB,KAAKb,MAA1B;AACH;AAEJ;;AAtGO,CAAZ;AAyGA,OAAO,MAAM2B,oBAAoB,GAAG,OAAO;AAAEN,EAAAA,IAAI,EAAE;AAAR,CAAP,CAA7B;AACP,OAAO,MAAMO,8BAA8B,GAAIC,IAAD,KACzC;AAAER,EAAAA,IAAI,EAAE,sBAAR;AAAgCG,EAAAA,OAAO,EAAEK;AAAzC,CADyC,CAAvC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAE;AAAR,CAAP,CAAhC;AACP,OAAO,MAAMU,6BAA6B,GAAIC,IAAD,KACxC;AAAEX,EAAAA,IAAI,EAAE,oBAAR;AAA8BhB,EAAAA,cAAc,EAAE2B;AAA9C,CADwC,CAAtC;AAIP,eAAejC,KAAf;AAEAkC,MAAM,CAAClC,KAAP,GAAeA,KAAf","sourcesContent":["// import rerenderEntireTree from '../render.js'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE'\nlet store = {\n    _state: {\n        messagesPege: {\n\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'Hi' },\n                { id: 3, message: 'you are good' },\n                { id: 4, message: 'yo' },\n                { id: 5, message: 'you' }\n            ],\n            newMessageText: ''\n        },\n\n        profile: {\n            dialogsData: [\n                { id: 1, name: 'Aleksey' },\n                { id: 2, name: 'Dmitiy' },\n                { id: 3, name: 'Grigorii' },\n                { id: 4, name: 'Eugeny' },\n                { id: 5, name: 'Artem' }\n            ],\n            postData: [\n                { id: 1, post: 'Hi, how are you?', likeCount: 5 },\n                { id: 2, post: \"It's my first post\", likeCount: 8 },\n                { id: 3, post: 'you are good', likeCount: 8 },\n                { id: 4, post: 'yo', likeCount: 8 },\n                { id: 5, post: 'you', likeCount: 8 }\n            ],\n            newPostText: 'it-proframing'\n        }\n    },\n    _callSubscriber() {\n        console.log('State chenged')\n    },\n\n    getState() {\n        return this._state\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n\n    },\n\n    //addPost () {\n    // // debugger;\n    //         let newPost = {\n    //             id: 5,\n    //             post: this._state.messagesPege.newPostText,\n    //             likeCount: 0\n    //         };\n\n    //         this._state.messagesPege.postData.push(newPost);\n    //         this._state.messagesPege.newPostText = '';\n    //         this._callSubscriber( this._state)\n    //     },\n    //     updateNewPostText (newTex) {\n    //         this._state.messagesPege.newPostText = newTex;\n    //         this._callSubscriber( this._state)\n    //     },\n    //     addMessage() {\n\n    //         let newMessage = {\n    //             id: 5,\n    //             message:  this._state.profile.newMessageText\n    //         }\n    //         this._state.profile.messages.push(newMessage);\n\n    //         this._callSubscriber( this._state)\n    //     },\n    //      updateNewMessage(newMessages) {\n    //         this._state.profile.newMessageText = newMessages;\n    //         this._callSubscriber( this._state)\n    //     },\n    dispatch(action) {\n        if (action.type === 'ADD-POST') {\n            let newPost = {\n                id: 6,\n                post: this._state.profile.newPostText,\n                likeCount: 0\n            };\n\n            this._state.profile.postData.push(newPost);\n            this._state.profile.newPostText = '';\n            this._callSubscriber(this._state)\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profile.newPostText = action.newText;\n            this._callSubscriber(this._state)\n        } else if (action.type === 'ADD-MESSAGE') {\n            let newMessage = {\n                id: 6,\n                message: this._state.messagesPege.newMessageText\n            };\n\n            this._state.messagesPege.messages.push(newMessage);\n            this._state.messagesPege.newMessageText = '';\n            this._callSubscriber(this._state)\n        } else if (action.tipe === 'UPDATE-NEW-MESSAGE') {\n            this._state.messagesPege.newMessageText = action.newMessageText;\n            this._callSubscriber(this._state)\n        }\n\n    }\n    \n}\nexport const addPostActionCreator = () => ({ type: 'ADD-POST' })\nexport const updateNewPostTextActionCreator = (text) =>\n    ({ type: 'UPDATE-NEW-POST-TEXT', newText: text })\nexport const addMessageActionCreator = () => ({ type: 'ADD-MESSAGE' })\nexport const updateNewMessageActionCreator = (mess) =>\n    ({ type: 'UPDATE-NEW-MESSAGE', newMessageText: mess})\n\n\nexport default store;\n\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}